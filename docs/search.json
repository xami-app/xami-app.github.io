[
  {
    "file": "admin\\getting-started",
    "title": "Admin Documentation",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "Admin Documentation"
      },
      {
        "type": "paragraph",
        "value": "In the future, you will be able to get help with running and configuring xami.\r\nRight now, we're still under heavy development, so explaining anything here would be kind of useless since  is subject to change."
      }
    ]
  },
  {
    "file": "admin\\languages\\adding-custom-languages",
    "title": "Adding Custom Languages",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "Adding Custom Languages"
      },
      {
        "type": "paragraph",
        "value": "This guide explains how to add completely new languages to the application."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Overview"
      },
      {
        "type": "paragraph",
        "value": "In addition to modifying existing languages, you can introduce entirely new languages that are not included by default."
      },
      {
        "type": "paragraph",
        "value": "All available translation keys can be found here:\r\n"
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Steps to Add a New Language"
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": "This folder is automatically created when the application starts."
      },
      {
        "type": "paragraph",
        "value": "Path: config/language"
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": "Create a new file following the naming convention:"
      },
      {
        "type": "paragraph",
        "value": "Make sure to use only available language codes or otherwise you will overwrite actual languages."
      },
      {
        "type": "paragraph",
        "value": "Example for Pirate Language:"
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": "Copy all translation keys from the ."
      },
      {
        "type": "paragraph",
        "value": "Provide your own translations for each key."
      },
      {
        "type": "paragraph",
        "value": "Example:"
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": "Save your new file."
      },
      {
        "type": "paragraph",
        "value": "It is recommended to restart the application to load the new language."
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": "The system will recognize both predefined and custom languages automatically."
      },
      {
        "type": "paragraph",
        "value": "Enjoy your newly created language!"
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Important Notes"
      },
      {
        "type": "paragraph",
        "value": "Make sure to define all important keys to avoid missing text. If you miss a translation, it's key will be used as language."
      },
      {
        "type": "paragraph",
        "value": "Properties files must be UTF-8 encoded without BOM."
      },
      {
        "type": "paragraph",
        "value": "Avoid using  language codes (e.g., es for Spanish, fr for French) unless you want to create a translation file for an  language. In this case, we do encourage to contribute to the officail repository."
      },
      {
        "type": "paragraph",
        "value": "With this system, you can easily expand the application's language support for new regions, communities, or custom requirements."
      }
    ]
  },
  {
    "file": "admin\\languages\\editing-languages",
    "title": "Editing Languages",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "Editing Languages"
      },
      {
        "type": "paragraph",
        "value": "This guide explains how to customize existing translations in the application."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Overview"
      },
      {
        "type": "paragraph",
        "value": "All user-facing text is controlled through translation keys. These keys are defined once and can be customized without modifying the core application files."
      },
      {
        "type": "paragraph",
        "value": "You can view all available translation keys  values here:\r\n"
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Steps to Edit Language Strings"
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": "This folder is automatically created when the application starts."
      },
      {
        "type": "paragraph",
        "value": "Path: config/language"
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": "If you want to modify an existing language (e.g., English), create a file named:"
      },
      {
        "type": "paragraph",
        "value": "If the file already exists, simply edit it."
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": "Copy any key you want to change from the ."
      },
      {
        "type": "paragraph",
        "value": "Add the key and your new translation in the messages_custom_[lang].properties file."
      },
      {
        "type": "paragraph",
        "value": "Example:"
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": "Save the file and even though not necessary, it is recommended to restart the application if it is already running."
      },
      {
        "type": "paragraph",
        "value": "Changes will be picked up dynamically, but are ensured to take effect on startup."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Important Notes"
      },
      {
        "type": "paragraph",
        "value": "Only keys you define are overridden. Everything else continues using the default predefined translations."
      },
      {
        "type": "paragraph",
        "value": "Make sure you use the correct language code (e.g., en, de, fr)."
      },
      {
        "type": "paragraph",
        "value": "Properties files must be encoded in UTF-8 without BOM."
      },
      {
        "type": "paragraph",
        "value": "By using this system, you can easily adjust the wording to better fit your needs without interfering with the application's update process."
      }
    ]
  },
  {
    "file": "admin\\languages",
    "title": "Languages",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "Languages"
      },
      {
        "type": "paragraph",
        "value": "xami includes a robust and flexible internationalization (i18n) system designed to support multiple languages and easy customization by administrators."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Predefined Language Sets"
      },
      {
        "type": "paragraph",
        "value": "The application comes with an internal set of . These files include all translation keys required for the frontend user interface and cover commonly used languages such as English, German, and more."
      },
      {
        "type": "paragraph",
        "value": "Predefined sets are maintained and updated with each application release. This ensures that users always have access to the latest translations without needing manual updates."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Custom Language Overrides"
      },
      {
        "type": "paragraph",
        "value": "To allow customization without modifying the predefined files, a config/language directory is automatically created when the application starts."
      },
      {
        "type": "paragraph",
        "value": "In this directory, administrators can:"
      },
      {
        "type": "paragraph",
        "value": " by creating partial language files."
      },
      {
        "type": "paragraph",
        "value": " that are not included in the predefined set."
      },
      {
        "type": "paragraph",
        "value": "User-defined language files must follow the naming convention messages_custom_[languageCode].properties (e.g., messages_custom_en.properties)."
      },
      {
        "type": "paragraph",
        "value": "To see further details, visit the sub-pages of this documentation page."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Language Command"
      },
      {
        "type": "paragraph",
        "value": "To view available languages, you can use the console. The corresponding command is called"
      },
      {
        "type": "paragraph",
        "value": "and is located under API Commands. You can see all found languages and their origin (see below)."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Loading Priority"
      },
      {
        "type": "paragraph",
        "value": "When loading translations, the application uses the following priority:"
      },
      {
        "type": "paragraph",
        "value": " (from config/language)"
      },
      {
        "type": "paragraph",
        "value": " (managed internally)"
      },
      {
        "type": "paragraph",
        "value": "If a translation key exists in both locations, the user-defined version will take precedence. This ensures full flexibility while maintaining fallback support for missing keys."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Language Origin Marking"
      },
      {
        "type": "paragraph",
        "value": "Each available language is automatically categorized based on its source:"
      },
      {
        "type": "paragraph",
        "value": ": Only a predefined version exists."
      },
      {
        "type": "paragraph",
        "value": ": Only a user-defined version exists."
      },
      {
        "type": "paragraph",
        "value": ": Both a predefined and a user-defined version exist."
      },
      {
        "type": "paragraph",
        "value": "This marking helps to better organize and understand the state of each language during administration and debugging."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Benefits of This Approach"
      },
      {
        "type": "paragraph",
        "value": ": Admins can adjust only the strings they need."
      },
      {
        "type": "paragraph",
        "value": ": Predefined languages continue to receive updates automatically."
      },
      {
        "type": "paragraph",
        "value": ": No need to merge changes manually when new versions are released."
      },
      {
        "type": "paragraph",
        "value": ": Full support for custom languages beyond the defaults."
      }
    ]
  },
  {
    "file": "admin\\themes",
    "title": "Themes",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "Themes"
      },
      {
        "type": "paragraph",
        "value": "As an administrator, you can add your own custom themes which the users can then use."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Creating a Theme"
      },
      {
        "type": "paragraph",
        "value": "To create a new theme, place a .json file in the following folder:"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Theme JSON Structure"
      },
      {
        "type": "paragraph",
        "value": "identifier: must be unique."
      },
      {
        "type": "paragraph",
        "value": "name: user-friendly display name."
      },
      {
        "type": "paragraph",
        "value": "description: describes the theme’s purpose or style."
      },
      {
        "type": "paragraph",
        "value": "theme: key-value map defining styling options."
      },
      {
        "type": "paragraph",
        "value": "👉 For a list of supported keys in the theme object, refer to the "
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Reloading Custom Themes"
      },
      {
        "type": "paragraph",
        "value": "To load or update user-defined themes, use:"
      },
      {
        "type": "paragraph",
        "value": "This command reads all files from config/themes and integrates them into the running application without requiring a restart."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Overriding Predefined Themes"
      },
      {
        "type": "paragraph",
        "value": "If a user-defined theme in config/themes has the  as a predefined one, it will  the predefined version. This allows admins to customize built-in themes while maintaining the original source."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Listing Available Themes"
      },
      {
        "type": "paragraph",
        "value": "Use the following command to display all recognized themes:"
      },
      {
        "type": "paragraph",
        "value": "Each theme will be listed along with its source:"
      },
      {
        "type": "paragraph",
        "value": " – Only the built-in version is present."
      },
      {
        "type": "paragraph",
        "value": " – Only a user-defined version is found."
      },
      {
        "type": "paragraph",
        "value": " – Both predefined and user-defined versions exist, and the user one is currently active."
      },
      {
        "type": "paragraph",
        "value": "This provides clear visibility into what themes are in use and whether any customizations have been applied."
      }
    ]
  },
  {
    "file": "dev\\annotations\\@authenticated",
    "title": "@Authenticated",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "@Authenticated"
      },
      {
        "type": "paragraph",
        "value": "The @Authenticated annotation can be used on API endpoints to ensure that the caller is authenticated (logged in)."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Overview"
      },
      {
        "type": "paragraph",
        "value": "If an unauthenticated user tries to access a method annotated with @Authenticated, the corresponding aspect will throw an exception which will be handled automatically to respond with HTTP status code 403 (Forbidden)."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "User object injection"
      },
      {
        "type": "paragraph",
        "value": "If the user that is calling the endpoint is authenticated, the aspect will inject the corresponding User entity into the  paramter of type User."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Usage"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Method Annotation"
      },
      {
        "type": "paragraph",
        "value": "The @Authenticated annotation can be used on method level like this:"
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "See also"
      },
      {
        "type": "paragraph",
        "value": "Some people do not like to use \"magic\" in their code, which is absolutely understandable. The aspect which wraps around the method can be found "
      },
      {
        "type": "paragraph",
        "value": "If you are curious about annotations in general:"
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Conclusion"
      },
      {
        "type": "paragraph",
        "value": "The @Authenticated annotation is a simple way to require authentication from a user when calling a method, saving you some LOC since you do not have to retrieve Optionals or throw any errors."
      }
    ]
  },
  {
    "file": "dev\\contributing\\repositories",
    "title": "xami Respositories",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "xami Respositories"
      },
      {
        "type": "paragraph",
        "value": "Looking for the source code? We got you! Here you can find all relevant xami GitHub repositories."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Main sources"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Application"
      },
      {
        "type": "paragraph",
        "value": "The main application source code can be found under"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/timonmdy/xami"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Core"
      },
      {
        "type": "paragraph",
        "value": "The xami-core repository contains shared resources between the main application and modules. It can be found under"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/timonmdy/xami-core"
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Modules"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Template"
      },
      {
        "type": "paragraph",
        "value": "The official module template, which can be used as a starting point to create your own module can be found under"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/timonmdy/xami-example-module"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Official modules"
      },
      {
        "type": "paragraph",
        "value": "Here is a list of official xami modules:"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/timonmdy/does-not-exist-yet"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/timonmdy/nothing-here"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "User modules"
      },
      {
        "type": "paragraph",
        "value": "Here is a list of (some) featured xami modules made by other developers:"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/you/why-have-you-not-made-one-yet"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/someone/submit-your-modules"
      }
    ]
  },
  {
    "file": "dev\\getting-started",
    "title": "Developer Documentation",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "Developer Documentation"
      },
      {
        "type": "paragraph",
        "value": "Here you will be able to find documentation for the source code which should help you when contributing to xami.\r\nThis section (and page) will grow as we keep developing, so if you're missing anything, feel free to add it here."
      }
    ]
  },
  {
    "file": "dev\\themes\\changes-during-development",
    "title": "Hot-Reloading Themes",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "Hot-Reloading Themes"
      },
      {
        "type": "paragraph",
        "value": "Theme JSON files are loaded differently depending on the active Spring profile. This setup optimizes for performance and flexibility."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Production Mode"
      },
      {
        "type": "paragraph",
        "value": "In production, themes are loaded from the  (typically from inside a JAR). This ensures:"
      },
      {
        "type": "paragraph",
        "value": "No changes to predefined themes at runtime."
      },
      {
        "type": "paragraph",
        "value": "Faster and more predictable behavior."
      },
      {
        "type": "paragraph",
        "value": "This means any changes to theme files require recompiling and redeploying the application."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Development Mode (dev profile)"
      },
      {
        "type": "paragraph",
        "value": "When running the app with the dev profile, the behavior changes to support rapid iteration:"
      },
      {
        "type": "paragraph",
        "value": "The application looks for predefined theme files in the local filesystem at:"
      },
      {
        "type": "paragraph",
        "value": "All .json files in this folder are loaded and used  the classpath."
      },
      {
        "type": "paragraph",
        "value": "This allows you to:"
      },
      {
        "type": "paragraph",
        "value": "Edit themes without restarting the app."
      },
      {
        "type": "paragraph",
        "value": "Quickly iterate on styling and color schemes."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Enable Dev Mode"
      },
      {
        "type": "paragraph",
        "value": "You can enable development mode in two ways:"
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Reloading Themes"
      },
      {
        "type": "paragraph",
        "value": "While in development mode, use the following command to reload  themes (including predefined ones) without restarting the app:"
      },
      {
        "type": "paragraph",
        "value": "This reloads the themes directly from the filesystem. If you're not in dev mode, this command will  affect predefined themes, since they are read from the classpath (and therefore immutable at runtime)."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Behind the Scenes: How It Works"
      },
      {
        "type": "paragraph",
        "value": "The method responsible for this logic is ThemeFileIndex#loadFromResources:"
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": "Look in src/main/resources/themes"
      },
      {
        "type": "paragraph",
        "value": "Load all .json files found there"
      },
      {
        "type": "paragraph",
        "value": "Log which files were loaded"
      },
      {
        "type": "paragraph",
        "value": "Any errors during loading are logged but don't stop the process"
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": "Load all .json theme files from the classpath (e.g., from inside a JAR)"
      },
      {
        "type": "paragraph",
        "value": "Save them to temporary files so the system can work with file paths"
      },
      {
        "type": "paragraph",
        "value": "This dual-loading mechanism allows developers to iterate quickly while maintaining reliability and consistency in production."
      }
    ]
  },
  {
    "file": "getting-started",
    "title": "Getting Started",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "Getting Started"
      },
      {
        "type": "paragraph",
        "value": "ATTENTION: This page is currently lorem ipsum: "
      },
      {
        "type": "paragraph",
        "value": "Welcome to the documentation site! Below you will find instructions on how to get started with the software. The guide is divided into three main sections: User, Admin, and Developer. Select the section that best fits your role."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "USER"
      },
      {
        "type": "paragraph",
        "value": "As a user, the software is designed to be easy to use and intuitive. Follow these steps to get started:"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Installation"
      },
      {
        "type": "paragraph",
        "value": "Download the latest version from the release page."
      },
      {
        "type": "paragraph",
        "value": "Install the software following the provided instructions for your operating system (Windows, macOS, or Linux)."
      },
      {
        "type": "paragraph",
        "value": "Once installed, launch the application from your start menu or desktop."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Account Setup"
      },
      {
        "type": "paragraph",
        "value": "Open the application and sign up for an account using your email address."
      },
      {
        "type": "paragraph",
        "value": "After signing up, you’ll receive a confirmation email. Click the confirmation link to activate your account."
      },
      {
        "type": "paragraph",
        "value": "Log in using your credentials."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Basic Features"
      },
      {
        "type": "paragraph",
        "value": "Once logged in, you can start using the main features such as:"
      },
      {
        "type": "paragraph",
        "value": "Viewing Dashboard: This is your starting point where you can see an overview of all activities."
      },
      {
        "type": "paragraph",
        "value": "Managing Profile: Go to your profile settings to update personal details and preferences."
      },
      {
        "type": "paragraph",
        "value": "Interacting with Content: Browse through available content and interact with it by commenting, liking, or sharing."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "ADMIN"
      },
      {
        "type": "paragraph",
        "value": "Admins have access to more advanced features to manage and monitor the system. Here’s how to get started:"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Admin Setup"
      },
      {
        "type": "paragraph",
        "value": "If you’ve been granted admin rights, log in using your admin credentials."
      },
      {
        "type": "paragraph",
        "value": "Ensure your admin account is activated via the confirmation email, if not done already."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Managing Users"
      },
      {
        "type": "paragraph",
        "value": "Go to the User Management section to add, remove, or modify user accounts."
      },
      {
        "type": "paragraph",
        "value": "You can assign roles, reset passwords, and approve or block user accounts as necessary."
      },
      {
        "type": "paragraph",
        "value": "Use the search functionality to easily locate specific users."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Configuring the System"
      },
      {
        "type": "paragraph",
        "value": "In the Settings section, you can configure global system settings such as:"
      },
      {
        "type": "paragraph",
        "value": "Permissions: Control who can access certain features based on roles."
      },
      {
        "type": "paragraph",
        "value": "Notifications: Set up alerts and notifications for system events."
      },
      {
        "type": "paragraph",
        "value": "Content Moderation: Set up filters or approval processes for submitted content."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Monitoring Activities"
      },
      {
        "type": "paragraph",
        "value": "Use the Activity Logs to keep track of user actions, system events, and other important actions within the system."
      },
      {
        "type": "paragraph",
        "value": "Generate reports based on log data to analyze usage patterns."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "DEVELOPER"
      },
      {
        "type": "paragraph",
        "value": "Developers can extend, customize, and integrate with the software using our API and plugin system. Follow these steps to get started:"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Setting Up Development Environment"
      },
      {
        "type": "paragraph",
        "value": "Clone the repository from GitHub:"
      },
      {
        "type": "paragraph",
        "value": "Install dependencies using npm install or yarn install (depending on your package manager)."
      },
      {
        "type": "paragraph",
        "value": "Ensure you have Node.js and the appropriate build tools installed for local development."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Exploring the Codebase"
      },
      {
        "type": "paragraph",
        "value": "The core application code is located in the src/ directory. Here you’ll find the main components, services, and utilities used by the software."
      },
      {
        "type": "paragraph",
        "value": "Review the README.md file in the src/ folder for specific developer instructions."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Extending the Application"
      },
      {
        "type": "paragraph",
        "value": "You can extend the software using plugins. Drop JAR files into the ./modules/ directory to add custom features."
      },
      {
        "type": "paragraph",
        "value": "Plugins can listen to events, add new API endpoints, or modify system behavior. For detailed instructions on creating plugins, refer to the Plugin Guide."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Using the API"
      },
      {
        "type": "paragraph",
        "value": "The API documentation provides detailed instructions on how to interact with the system programmatically."
      },
      {
        "type": "paragraph",
        "value": "You can access the API endpoints for user management, content interaction, and system monitoring."
      },
      {
        "type": "paragraph",
        "value": "Example API call to fetch user data:"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Running the Application Locally"
      },
      {
        "type": "paragraph",
        "value": "Use npm start or yarn start to run the application locally for testing and development."
      },
      {
        "type": "paragraph",
        "value": "Access the local version of the app via http://localhost:3000."
      }
    ]
  },
  {
    "file": "user\\getting-started",
    "title": "User Documentation",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "User Documentation"
      },
      {
        "type": "paragraph",
        "value": "In the future, you will be able to find guides on how to do certain things with the interface.\r\nRight now, xami is still under heavy development, so explaining anything here would be kind of useless since  is subject to change."
      }
    ]
  }
]