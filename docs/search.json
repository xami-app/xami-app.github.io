[
  {
    "file": "admin\\getting-started",
    "title": "Admin Documentation",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "Admin Documentation"
      },
      {
        "type": "paragraph",
        "value": "In the future, you will be able to get help with running and configuring ``xami`.\r\nRight now, we're still under heavy development, so explaining anything here would be kind of useless since  is subject to change."
      }
    ]
  },
  {
    "file": "dev\\annotations\\@authenticated",
    "title": "@Authenticated",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "@Authenticated"
      },
      {
        "type": "paragraph",
        "value": "The @Authenticated annotation can be used on API endpoints to ensure that the caller is authenticated (logged in)."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Overview"
      },
      {
        "type": "paragraph",
        "value": "If an unauthenticated user tries to access a method annotated with @Authenticated, the corresponding aspect will throw an exception which will be handled automatically to respond with HTTP status code 403 (Forbidden)."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "User object injection"
      },
      {
        "type": "paragraph",
        "value": "If the user that is calling the endpoint is authenticated, the aspect will inject the corresponding User entity into the  paramter of type User."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Usage"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Method Annotation"
      },
      {
        "type": "paragraph",
        "value": "The @Authenticated annotation can be used on method level like this:"
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "See also"
      },
      {
        "type": "paragraph",
        "value": "Some people do not like to use \"magic\" in their code, which is absolutely understandable. The aspect which wraps around the method can be found "
      },
      {
        "type": "paragraph",
        "value": "If you are curious about annotations in general:"
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "paragraph",
        "value": ""
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Conclusion"
      },
      {
        "type": "paragraph",
        "value": "The @Authenticated annotation is a simple way to require authentication from a user when calling a method, saving you some LOC since you do not have to retrieve Optionals or throw any errors."
      }
    ]
  },
  {
    "file": "dev\\contributing\\repositories",
    "title": "xami Respositories",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "xami Respositories"
      },
      {
        "type": "paragraph",
        "value": "Looking for the source code? We got you! Here you can find all relevant xami GitHub repositories."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Main sources"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Application"
      },
      {
        "type": "paragraph",
        "value": "The main application source code can be found under"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/timonmdy/xami"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Core"
      },
      {
        "type": "paragraph",
        "value": "The xami-core repository contains shared resources between the main application and modules. It can be found under"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/timonmdy/xami-core"
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "Modules"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Template"
      },
      {
        "type": "paragraph",
        "value": "The official module template, which can be used as a starting point to create your own module can be found under"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/timonmdy/xami-example-module"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Official modules"
      },
      {
        "type": "paragraph",
        "value": "Here is a list of official xami modules:"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/timonmdy/does-not-exist-yet"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/timonmdy/nothing-here"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "User modules"
      },
      {
        "type": "paragraph",
        "value": "Here is a list of (some) featured xami modules made by other developers:"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/you/why-have-you-not-made-one-yet"
      },
      {
        "type": "paragraph",
        "value": "https://github.com/someone/submit-your-modules"
      }
    ]
  },
  {
    "file": "dev\\getting-started",
    "title": "Developer Documentation",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "Developer Documentation"
      },
      {
        "type": "paragraph",
        "value": "Here you will be able to find documentation for the source code which should help you when contributing to xami.\r\nThis section (and page) will grow as we keep developing, so if you're missing anything, feel free to add it here."
      }
    ]
  },
  {
    "file": "getting-started",
    "title": "Getting Started",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "Getting Started"
      },
      {
        "type": "paragraph",
        "value": "Welcome to the documentation site! Below you will find instructions on how to get started with the software. The guide is divided into three main sections: User, Admin, and Developer. Select the section that best fits your role."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "USER"
      },
      {
        "type": "paragraph",
        "value": "As a user, the software is designed to be easy to use and intuitive. Follow these steps to get started:"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Installation"
      },
      {
        "type": "paragraph",
        "value": "Download the latest version from the release page."
      },
      {
        "type": "paragraph",
        "value": "Install the software following the provided instructions for your operating system (Windows, macOS, or Linux)."
      },
      {
        "type": "paragraph",
        "value": "Once installed, launch the application from your start menu or desktop."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Account Setup"
      },
      {
        "type": "paragraph",
        "value": "Open the application and sign up for an account using your email address."
      },
      {
        "type": "paragraph",
        "value": "After signing up, you’ll receive a confirmation email. Click the confirmation link to activate your account."
      },
      {
        "type": "paragraph",
        "value": "Log in using your credentials."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Basic Features"
      },
      {
        "type": "paragraph",
        "value": "Once logged in, you can start using the main features such as:"
      },
      {
        "type": "paragraph",
        "value": "Viewing Dashboard: This is your starting point where you can see an overview of all activities."
      },
      {
        "type": "paragraph",
        "value": "Managing Profile: Go to your profile settings to update personal details and preferences."
      },
      {
        "type": "paragraph",
        "value": "Interacting with Content: Browse through available content and interact with it by commenting, liking, or sharing."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "ADMIN"
      },
      {
        "type": "paragraph",
        "value": "Admins have access to more advanced features to manage and monitor the system. Here’s how to get started:"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Admin Setup"
      },
      {
        "type": "paragraph",
        "value": "If you’ve been granted admin rights, log in using your admin credentials."
      },
      {
        "type": "paragraph",
        "value": "Ensure your admin account is activated via the confirmation email, if not done already."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Managing Users"
      },
      {
        "type": "paragraph",
        "value": "Go to the User Management section to add, remove, or modify user accounts."
      },
      {
        "type": "paragraph",
        "value": "You can assign roles, reset passwords, and approve or block user accounts as necessary."
      },
      {
        "type": "paragraph",
        "value": "Use the search functionality to easily locate specific users."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Configuring the System"
      },
      {
        "type": "paragraph",
        "value": "In the Settings section, you can configure global system settings such as:"
      },
      {
        "type": "paragraph",
        "value": "Permissions: Control who can access certain features based on roles."
      },
      {
        "type": "paragraph",
        "value": "Notifications: Set up alerts and notifications for system events."
      },
      {
        "type": "paragraph",
        "value": "Content Moderation: Set up filters or approval processes for submitted content."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Monitoring Activities"
      },
      {
        "type": "paragraph",
        "value": "Use the Activity Logs to keep track of user actions, system events, and other important actions within the system."
      },
      {
        "type": "paragraph",
        "value": "Generate reports based on log data to analyze usage patterns."
      },
      {
        "type": "heading",
        "depth": 2,
        "value": "DEVELOPER"
      },
      {
        "type": "paragraph",
        "value": "Developers can extend, customize, and integrate with the software using our API and plugin system. Follow these steps to get started:"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Setting Up Development Environment"
      },
      {
        "type": "paragraph",
        "value": "Clone the repository from GitHub:"
      },
      {
        "type": "paragraph",
        "value": "Install dependencies using npm install or yarn install (depending on your package manager)."
      },
      {
        "type": "paragraph",
        "value": "Ensure you have Node.js and the appropriate build tools installed for local development."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Exploring the Codebase"
      },
      {
        "type": "paragraph",
        "value": "The core application code is located in the src/ directory. Here you’ll find the main components, services, and utilities used by the software."
      },
      {
        "type": "paragraph",
        "value": "Review the README.md file in the src/ folder for specific developer instructions."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Extending the Application"
      },
      {
        "type": "paragraph",
        "value": "You can extend the software using plugins. Drop JAR files into the ./modules/ directory to add custom features."
      },
      {
        "type": "paragraph",
        "value": "Plugins can listen to events, add new API endpoints, or modify system behavior. For detailed instructions on creating plugins, refer to the Plugin Guide."
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Using the API"
      },
      {
        "type": "paragraph",
        "value": "The API documentation provides detailed instructions on how to interact with the system programmatically."
      },
      {
        "type": "paragraph",
        "value": "You can access the API endpoints for user management, content interaction, and system monitoring."
      },
      {
        "type": "paragraph",
        "value": "Example API call to fetch user data:"
      },
      {
        "type": "heading",
        "depth": 3,
        "value": "Running the Application Locally"
      },
      {
        "type": "paragraph",
        "value": "Use npm start or yarn start to run the application locally for testing and development."
      },
      {
        "type": "paragraph",
        "value": "Access the local version of the app via http://localhost:3000."
      }
    ]
  },
  {
    "file": "user\\getting-started",
    "title": "User Documentation",
    "content": [
      {
        "type": "heading",
        "depth": 1,
        "value": "User Documentation"
      },
      {
        "type": "paragraph",
        "value": "In the future, you will be able to find guides on how to do certain things with the interface.\r\nRight now, xami is still under heavy development, so explaining anything here would be kind of useless since  is subject to change."
      }
    ]
  }
]